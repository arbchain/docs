(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(97)),b={id:"spc",title:"SPC contract"},l={unversionedId:"spc",id:"spc",isDocsHomePage:!1,title:"SPC contract",description:"createArbitrationResponse",source:"@site/docs/spc.md",slug:"/spc",permalink:"/spc",editUrl:"https://github.com/arbchain/docs/edit/master/docs/spc.md",version:"current",sidebar:"someSidebar",previous:{title:"Getting started",permalink:"/getting-started"},next:{title:"Master contract",permalink:"/master-contract"}},c=[{value:"createArbitrationResponse",id:"createarbitrationresponse",children:[{value:"Parameters",id:"parameters",children:[]}]},{value:"createClaim",id:"createclaim",children:[{value:"Parameters",id:"parameters-1",children:[]}]},{value:"createProcedureStatement",id:"createprocedurestatement",children:[{value:"Parameters",id:"parameters-2",children:[]}]},{value:"appointArbitrator",id:"appointarbitrator",children:[{value:"Parameters",id:"parameters-3",children:[]}]},{value:"challengeAppointment",id:"challengeappointment",children:[{value:"Parameters",id:"parameters-4",children:[]}]},{value:"revokeArbitrator",id:"revokearbitrator",children:[{value:"Parameters",id:"parameters-5",children:[]}]},{value:"createStatement",id:"createstatement",children:[{value:"Parameters",id:"parameters-6",children:[]}]},{value:"submitWitness",id:"submitwitness",children:[{value:"Parameters",id:"parameters-7",children:[]}]},{value:"appointExpert",id:"appointexpert",children:[{value:"Parameters",id:"parameters-8",children:[]}]},{value:"issueAward",id:"issueaward",children:[{value:"Parameters",id:"parameters-9",children:[]}]},{value:"attachDocument",id:"attachdocument",children:[{value:"Parameters",id:"parameters-10",children:[]}]},{value:"signDocuments",id:"signdocuments",children:[{value:"Parameters",id:"parameters-11",children:[]}]},{value:"agreeProcedureStatement",id:"agreeprocedurestatement",children:[{value:"Parameters",id:"parameters-12",children:[]}]},{value:"depositCost",id:"depositcost",children:[{value:"Parameters",id:"parameters-13",children:[]}]},{value:"setSeat",id:"setseat",children:[{value:"Parameters",id:"parameters-14",children:[]}]},{value:"setLanguage",id:"setlanguage",children:[{value:"Parameters",id:"parameters-15",children:[]}]},{value:"getArbitratorLength",id:"getarbitratorlength",children:[{value:"Returns",id:"returns",children:[]}]},{value:"getResponseLength",id:"getresponselength",children:[{value:"Returns",id:"returns-1",children:[]}]},{value:"getTotalProcedureStatements",id:"gettotalprocedurestatements",children:[{value:"Parameters",id:"parameters-16",children:[]},{value:"Returns",id:"returns-2",children:[]}]},{value:"witnessLength",id:"witnesslength",children:[{value:"Returns",id:"returns-3",children:[]}]},{value:"awardsLength",id:"awardslength",children:[{value:"Returns",id:"returns-4",children:[]}]},{value:"getTotalClaims",id:"gettotalclaims",children:[{value:"Parameters",id:"parameters-17",children:[]},{value:"Returns",id:"returns-5",children:[]}]},{value:"getTotalStatements",id:"gettotalstatements",children:[{value:"Parameters",id:"parameters-18",children:[]},{value:"Returns",id:"returns-6",children:[]}]}],o={toc:c};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"createarbitrationresponse"},"createArbitrationResponse"),Object(i.b)("p",null,"Used for creating an arbitration response."),Object(i.b)("h3",{id:"parameters"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentHash")," - ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentIpfsHash")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : IPFS hash value of the uploaded document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_monetaryAmount")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Monetary Amount for the procedure "),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_crossClaim")," - ",Object(i.b)("inlineCode",{parentName:"li"},"bool")," : Indicates cross-claim status"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_requestId")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Arbitration Request Id"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_claimId")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Cross-claim id")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function createArbitrationResponse(\n    bytes32 _documentHash,\n    string memory _documentIpfsHash,\n    uint256 _monetaryAmount,\n    bool _crossClaim,\n    uint256 _requestId,\n    uint256 _claimId\n)\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If _crossClaim is false then _claimId should be zero."))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"createclaim"},"createClaim"),Object(i.b)("p",null,"Used for creating a claim. It can be called by any party involved in an arbitration."),Object(i.b)("h3",{id:"parameters-1"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_claimId")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Claim id"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_respondent"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Respondent address"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentIpfsHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : IPFS hash value of the uploaded document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_description"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Description related to claim")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function createClaim(\n    uint256 _claimId,\n    address _respondent,\n    bytes32 _documentHash,\n    string memory _documentIpfsHash,\n    string memory _description\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"createprocedurestatement"},"createProcedureStatement"),Object(i.b)("p",null,"Used for creating a procedure statement for an arbitration. It is initiated by the party who calls for an\narbitration. The respondent party can agree to this or generate a new procedure statement."),Object(i.b)("h3",{id:"parameters-2"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_parties")," - ",Object(i.b)("inlineCode",{parentName:"li"},"Party")," : An array of parties involved in procedure statement"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_seat"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Seat to be used for arbitration"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_language"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Language to be used in arbitration"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentIpfsHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : IPFS hash value of the uploaded document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function createProcedureStatement(\n    Party[] memory _parties,\n    string memory _seat,\n    string memory _language,\n    string memory _documentIpfsHash,\n    bytes32 _documentHash\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"appointarbitrator"},"appointArbitrator"),Object(i.b)("p",null,"Used for appointing an arbitrator. It is initiated by arbitration court. "),Object(i.b)("h3",{id:"parameters-3"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_arbitratorAddress")," - ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Arbitrator appointed by the court"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_requestId"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Arbitration request id")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function appointArbitrator(address _arbitratorAddress, uint256 _requestId)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"challengeappointment"},"challengeAppointment"),Object(i.b)("p",null,"Used for challenging an arbitrator appointment. It can be initiated by any party involved in an arbitration."),Object(i.b)("h3",{id:"parameters-4"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_arbitratorAddress")," - ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Arbitrator appointed by the court"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_reason"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Reason of challenge")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function challengeAppointment(address _arbitratorAddress, string memory _reason)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"revokearbitrator"},"revokeArbitrator"),Object(i.b)("p",null,"Used for revoking an arbitrator. It is initiated by arbitration court."),Object(i.b)("h3",{id:"parameters-5"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_challengeIndex")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Challenge index")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function revokeArbitrator(uint256 _challengeIndex)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"createstatement"},"createStatement"),Object(i.b)("p",null,"Used for creating a statement. "),Object(i.b)("h3",{id:"parameters-6"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_parties")," - ",Object(i.b)("inlineCode",{parentName:"li"},"Party")," : An array of parties involved in statement"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_stakeholder"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"StakeHolder")," : StakeHolder involved in arbitration"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_statementType"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"StatementType")," : Type of statement"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_subject"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Subject of statement"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentIpfsHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : IPFS hash value of the uploaded document")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function createStatement(\n    Party[] memory _parties,\n    StakeHolder _stakeholder,\n    StatementType _statementType,\n    string memory _subject,\n    bytes32 _documentHash,\n    string memory _documentIpfsHash\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"submitwitness"},"submitWitness"),Object(i.b)("p",null,"Used for submitting witness involved in arbitration."),Object(i.b)("h3",{id:"parameters-7"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_witnessAddress")," - ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Witness address")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function submitWitness(address _witnessAddress)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"appointexpert"},"appointExpert"),Object(i.b)("p",null,"Used for appointing an expert for arbitration."),Object(i.b)("h3",{id:"parameters-8"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_expertAddress")," - ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Expert address"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_requestId"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Arbitration request id")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function appointExpert(address _expertAddress, uint256 _requestId)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"issueaward"},"issueAward"),Object(i.b)("p",null,"Used for generating an award."),Object(i.b)("h3",{id:"parameters-9"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_name")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Name of recipient"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_requestId"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Arbitration request id"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_documentHash"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : keccak256 hash value of the original document")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function issueAward(\n    string memory _name,\n    uint256 _requestId,\n    string memory _documentHash\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"attachdocument"},"attachDocument"),Object(i.b)("p",null,"Used for uploading the document."),Object(i.b)("h3",{id:"parameters-10"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"docHash")," - ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"signers"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"address[]")," : Signers who have to sign the document")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function attachDocument(bytes32 docHash, address[] memory signers)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"signdocuments"},"signDocuments"),Object(i.b)("p",null,"Used for signing the document."),Object(i.b)("h3",{id:"parameters-11"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"nonce")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint")," : Nonce to prevent replay attacks"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"signature"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"bytes")," : Signed off chain by the initiator"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"documentHash")," - ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function signDocuments(\n    uint nonce, \n    bytes memory signature, \n    bytes32 documentHash\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"agreeprocedurestatement"},"agreeProcedureStatement"),Object(i.b)("p",null,"Used for accepting the procedure statement by signing the procedure statement. It is used by respondent party."),Object(i.b)("h3",{id:"parameters-12"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"nonce")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint")," : Nonce to prevent replay attacks"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"signature"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"bytes")," : signed off chain by the initiator"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"documentHash")," - ",Object(i.b)("inlineCode",{parentName:"li"},"bytes32")," : keccak256 hash value of the original document")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function agreeProcedureStatement(\n    uint nonce, \n    bytes memory signature,\n    bytes32 documentHash\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"depositcost"},"depositCost"),Object(i.b)("p",null,"Used for depositing the cost involved in arbitration."),Object(i.b)("h3",{id:"parameters-13"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_cost")," - ",Object(i.b)("inlineCode",{parentName:"li"},"uint256")," : Arbitration cost")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function depositCost(uint256 _cost)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"setseat"},"setSeat"),Object(i.b)("p",null,"Used for seat selection for an arbitration."),Object(i.b)("h3",{id:"parameters-14"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_seat")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Seat used for arbitration")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function setSeat(string memory _seat)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"setlanguage"},"setLanguage"),Object(i.b)("p",null,"Used for language selection for an arbitration."),Object(i.b)("h3",{id:"parameters-15"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_language")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string")," : Language used for arbitration")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function setLanguage(string memory _language)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"getarbitratorlength"},"getArbitratorLength"),Object(i.b)("p",null,"Returns total number of arbitrators appointed for an arbitration."),Object(i.b)("h3",{id:"returns"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function getArbitratorLength() public view returns (uint256)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"getresponselength"},"getResponseLength"),Object(i.b)("p",null,"Returns total number of response created."),Object(i.b)("h3",{id:"returns-1"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function getResponseLength() public view returns (uint256)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"gettotalprocedurestatements"},"getTotalProcedureStatements"),Object(i.b)("p",null,"Returns total number of procedure statements created by a party."),Object(i.b)("h3",{id:"parameters-16"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_userAddress"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Party address ")),Object(i.b)("h3",{id:"returns-2"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function getTotalProcedureStatements(address _userAddress) public view returns (uint256) \n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"witnesslength"},"witnessLength"),Object(i.b)("p",null,"Returns total number of witnesses involved in an arbitration."),Object(i.b)("h3",{id:"returns-3"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function witnessLength() public view returns (uint256)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"awardslength"},"awardsLength"),Object(i.b)("p",null,"Returns total number of awards generated for an arbitration."),Object(i.b)("h3",{id:"returns-4"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function awardsLength() public view returns (uint256)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"gettotalclaims"},"getTotalClaims"),Object(i.b)("p",null,"Returns total number of claims generated by a particular party."),Object(i.b)("h3",{id:"parameters-17"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_userAddress"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Party address")),Object(i.b)("h3",{id:"returns-5"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function getTotalClaims(address _userAddress) public view returns (uint256)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"gettotalstatements"},"getTotalStatements"),Object(i.b)("p",null,"Returns total number of statement generated by a particular party."),Object(i.b)("h3",{id:"parameters-18"},"Parameters"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"_userAddress"),"- ",Object(i.b)("inlineCode",{parentName:"li"},"address")," : Party address")),Object(i.b)("h3",{id:"returns-6"},"Returns"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"uint256")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"function getTotalStatements(address _userAddress) public view returns (uint256) \n")),Object(i.b)("hr",null))}s.isMDXComponent=!0},97:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,b=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,u=d["".concat(b,".").concat(m)]||d[m]||p[m]||i;return n?r.a.createElement(u,l(l({ref:t},o),{},{components:n})):r.a.createElement(u,l({ref:t},o))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,b=new Array(i);b[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,b[1]=l;for(var o=2;o<i;o++)b[o]=n[o];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);